// 这段 MFC 示例源代码演示如何使用 MFC Microsoft Office Fluent 用户界面 
// (“Fluent UI”)。该示例仅供参考，
// 用以补充《Microsoft 基础类参考》和 
// MFC C++ 库软件随附的相关电子文档。  
// 复制、使用或分发 Fluent UI 的许可条款是单独提供的。  
// 若要了解有关 Fluent UI 许可计划的详细信息，请访问 
// http://go.microsoft.com/fwlink/?LinkId=238214。
//
// 版权所有(C) Microsoft Corporation
// 保留所有权利。

// CADCAM.cpp : 定义应用程序的类行为。
//

#include "stdafx.h"
#include "afxwinappex.h"
#include "afxdialogex.h"
#include "CADCAM.h"
#include "MainFrm.h"

#include "CADCAMDoc.h"
#include "CADCAMView.h"


/////   add by lu
#include "HDB.h"
#include "CTDriver.h"
#include "license.hxx"
#include "spa_unlock_result.hxx"

#include "ha_bridge.h"
#include "part_api.hxx"

#include "visualize_license.h"
//////////////////////////////



#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CCADCAMApp

BEGIN_MESSAGE_MAP(CCADCAMApp, CWinAppEx)
	ON_COMMAND(ID_APP_ABOUT, &CCADCAMApp::OnAppAbout)
	// 基于文件的标准文档命令
	ON_COMMAND(ID_FILE_NEW, &CWinAppEx::OnFileNew)
	ON_COMMAND(ID_FILE_OPEN, &CWinAppEx::OnFileOpen)
	// 标准打印设置命令
	ON_COMMAND(ID_FILE_PRINT_SETUP, &CWinAppEx::OnFilePrintSetup)
END_MESSAGE_MAP()


// CCADCAMApp 构造

CCADCAMApp::CCADCAMApp()
{
	//////   add by lu
	HDB::EnableErrorManager();
	m_pHDB = NULL;
	m_pCTDriver = NULL;
	////////////////////////////////////////


	m_bHiColorIcons = TRUE;

	// 支持重新启动管理器
	m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_ALL_ASPECTS;
#ifdef _MANAGED
	// 如果应用程序是利用公共语言运行时支持(/clr)构建的，则: 
	//     1) 必须有此附加设置，“重新启动管理器”支持才能正常工作。
	//     2) 在您的项目中，您必须按照生成顺序向 System.Windows.Forms 添加引用。
	System::Windows::Forms::Application::SetUnhandledExceptionMode(System::Windows::Forms::UnhandledExceptionMode::ThrowException);
#endif

	// TODO: 将以下应用程序 ID 字符串替换为唯一的 ID 字符串；建议的字符串格式
	//为 CompanyName.ProductName.SubProduct.VersionInformation
	SetAppID(_T("CADCAM.AppID.NoVersion"));

	// TODO: 在此处添加构造代码，
	// 将所有重要的初始化放置在 InitInstance 中
}

CCADCAMApp::~CCADCAMApp()
{
	if (m_pHDB)
	{
		delete m_pHDB;
		m_pHDB = NULL;
	}
}

// 唯一的一个 CCADCAMApp 对象

CCADCAMApp theApp;

/////////    add  by lu
void unlock_spatial_products_8036();


// CCADCAMApp 初始化

BOOL CCADCAMApp::InitInstance()
{
	///////  add by lu
	HC_Define_System_Options("license = `" VISUALIZE_LICENSE "`");

	m_pHDB = new HDB();
	m_pHDB->Init();

	m_pCTDriver = new CTDriver(10);
	m_pCTDriver->StartTimer();

	char fontDirectory[MAX_PATH + 32];
	::GetWindowsDirectoryA(fontDirectory, MAX_PATH);
	strcat(fontDirectory, "\\Fonts");
	char buf[MAX_PATH + 64] = { "" };
	sprintf(buf, "font directory = %s", fontDirectory);
	HC_Define_System_Options(buf);

	base_configuration base_config;
	logical ok = initialize_base(&base_config);


	unlock_spatial_products_8036();
	check_outcome(api_start_modeller(0));
	check_outcome(api_initialize_hoops_acis_bridge());
	check_outcome(api_initialize_part_manager());
	//////////////////////////////


	// 如果一个运行在 Windows XP 上的应用程序清单指定要
	// 使用 ComCtl32.dll 版本 6 或更高版本来启用可视化方式，
	//则需要 InitCommonControlsEx()。  否则，将无法创建窗口。
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// 将它设置为包括所有要在应用程序中使用的
	// 公共控件类。
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinAppEx::InitInstance();


	// 初始化 OLE 库
	if (!AfxOleInit())
	{
		AfxMessageBox(IDP_OLE_INIT_FAILED);
		return FALSE;
	}

	AfxEnableControlContainer();

	EnableTaskbarInteraction(FALSE);

	// 使用 RichEdit 控件需要 AfxInitRichEdit2()	
	// AfxInitRichEdit2();

	// 标准初始化
	// 如果未使用这些功能并希望减小
	// 最终可执行文件的大小，则应移除下列
	// 不需要的特定初始化例程
	// 更改用于存储设置的注册表项
	// TODO: 应适当修改该字符串，
	// 例如修改为公司或组织名
	SetRegistryKey(_T("应用程序向导生成的本地应用程序"));
	LoadStdProfileSettings(4);  // 加载标准 INI 文件选项(包括 MRU)


	InitContextMenuManager();
	InitShellManager();

	InitKeyboardManager();

	InitTooltipManager();
	CMFCToolTipInfo ttParams;
	ttParams.m_bVislManagerTheme = TRUE;
	theApp.GetTooltipManager()->SetTooltipParams(AFX_TOOLTIP_TYPE_ALL,
		RUNTIME_CLASS(CMFCToolTipCtrl), &ttParams);

	// 注册应用程序的文档模板。  文档模板
	// 将用作文档、框架窗口和视图之间的连接
	CSingleDocTemplate* pDocTemplate;
	pDocTemplate = new CSingleDocTemplate(
		IDR_MAINFRAME,
		RUNTIME_CLASS(CCADCAMDoc),
		RUNTIME_CLASS(CMainFrame),       // 主 SDI 框架窗口
		RUNTIME_CLASS(CCADCAMView));
	if (!pDocTemplate)
		return FALSE;
	AddDocTemplate(pDocTemplate);


	// 分析标准 shell 命令、DDE、打开文件操作的命令行
	CCommandLineInfo cmdInfo;
	ParseCommandLine(cmdInfo);



	// 调度在命令行中指定的命令。  如果
	// 用 /RegServer、/Register、/Unregserver 或 /Unregister 启动应用程序，则返回 FALSE。
	if (!ProcessShellCommand(cmdInfo))
		return FALSE;

	// 唯一的一个窗口已初始化，因此显示它并对其进行更新
	m_pMainWnd->ShowWindow(SW_SHOW);
	m_pMainWnd->UpdateWindow();
	return TRUE;
}

int CCADCAMApp::ExitInstance()
{
	//TODO: 处理可能已添加的附加资源
	////////  add by lu
	if (m_pCTDriver)
	{
		delete m_pCTDriver;
		m_pCTDriver = NULL;
	}

	if (m_pHDB)
	{
		delete m_pHDB;
		m_pHDB = NULL;

		api_terminate_part_manager();
		api_terminate_hoops_acis_bridge();
		api_stop_modeller();
		terminate_base();
	}
	///////////////////////

	AfxOleTerm(FALSE);

	return CWinAppEx::ExitInstance();
}

// CCADCAMApp 消息处理程序


// 用于应用程序“关于”菜单项的 CAboutDlg 对话框

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 对话框数据
#ifdef AFX_DESIGN_TIME
	enum { IDD = IDD_ABOUTBOX };
#endif

protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 支持

// 实现
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(IDD_ABOUTBOX)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()

// 用于运行对话框的应用程序命令
void CCADCAMApp::OnAppAbout()
{
	CAboutDlg aboutDlg;
	aboutDlg.DoModal();
}

// CCADCAMApp 自定义加载/保存方法

void CCADCAMApp::PreLoadState()
{
	BOOL bNameValid;
	CString strName;
	bNameValid = strName.LoadString(IDS_EDIT_MENU);
	ASSERT(bNameValid);
	GetContextMenuManager()->AddMenu(strName, IDR_POPUP_EDIT);
}

void CCADCAMApp::LoadCustomState()
{
}

void CCADCAMApp::SaveCustomState()
{
}

// CCADCAMApp 消息处理程序



